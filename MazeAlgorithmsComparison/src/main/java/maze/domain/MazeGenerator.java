
package maze.domain;

/**
 * A class that uses the different maze generating classes.
 * @author taleiko
 */
public class MazeGenerator {
    /**
     * The class that generates mazes using the recursive backtracker method.
     */
    private RecursiveBacktracker recursiveBacktracker;
    /**
     * The class that generates mazes using an implementation of Kruskal's
     * algorithm.
     */
    private KruskalMaze kruskal;

    /**
     * Initializes the recursive backtracker class with its width and height.
     * @param mazeWidth
     * @param mazeHeight
     */
    public void initializeRecursiveBacktracker(final int mazeWidth,
            final int mazeHeight) {
        recursiveBacktracker = new RecursiveBacktracker(mazeWidth, mazeHeight);
    }
    /**
     * Initializes the Kruskal maze generator with its width and height.
     * @param mazeWidth
     * @param mazeHeight
     */
    public void initializeKruskal(final int mazeWidth, final int mazeHeight) {
        kruskal = new KruskalMaze(mazeWidth, mazeHeight);
    }
    /**
     * Tells the recursive backtracker class to generate a maze.
     */
    public void generateRecursiveBacktrackerMaze() {
        recursiveBacktracker.generateMaze();
    }
    /**
     * Tells the Kruskal class to generate a maze.
     */
    public void generateKruskalMaze() {
        kruskal.generateMaze();
    }
    /**
     * Returns the maze generated by the recursive backtracker class.
     * @return recursiveBacktrackerMaze
     */
    public char[][] getRecursiveBacktrackerMaze() {
        return recursiveBacktracker.getMaze();
    }
    /**
     * Returns the maze generates by the Kruskal algorithm.
     * @return kruskalMaze
     */
    public char[][] getKruskalMaze() {
        return kruskal.getMaze();
    }
}
